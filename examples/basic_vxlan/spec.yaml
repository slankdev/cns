
# DESCRIPTION: Basic VXLAN test using Iproute2
# INIT: cns spec.yaml init | sudo sh && ./setup.sh
# FINI: cns spec.yaml fini | sudo sh
# TOPO:
#                       10.0.0.0/24
#                 .1(net0)      .2(net0)
#                R0---------------------R1
#        .1(net1) |                     | .10(net1)
#                 |                     |
#  192.168.0.0/24 |                     | 192.168.0.0/24
#                 |                     |
#        .2(net0) |                     | .20(net0)
#                C0                     C1
#

nodes:
  - name: R0
    image: slankdev/frr
    interfaces:
      - { name: net0, type: direct, opts: R1#net0 }
      - { name: net1, type: direct, opts: C0#net0 }
  - name: R1
    image: slankdev/frr
    interfaces:
      - { name: net0, type: direct, opts: R0#net0 }
      - { name: net1, type: direct, opts: C1#net0 }
  - name: C0
    image: slankdev/ubuntu:16.04
    interfaces:
      - { name: net0, type: direct, opts: R0#net1 }
  - name: C1
    image: slankdev/ubuntu:16.04
    interfaces:
      - { name: net0, type: direct, opts: R1#net1 }

node_configs:
  - name: R0
    cmds:
    - cmd: ip addr add 10.0.0.1/24 dev net0
    - cmd: ip addr add 192.168.0.1/24 dev net1
  - name: R1
    cmds:
    - cmd: ip addr add 10.0.0.2/24 dev net0
    - cmd: ip addr add 192.168.0.10/24 dev net1
    - cmd: >-
        ip addr add 1.1.1.1/32
        dev net0
  - name: C0
    cmds:
    - cmd: ip addr add 192.168.0.2/24 dev net0
  - name: C1
    cmds:
    - cmd: ip addr add 192.168.0.20/24 dev net0

test:
  - cmds:
    - cmd: docker exec C0 ping -c2 192.168.0.1
    - cmd: docker exec C1 ping -c2 192.168.0.10
    - cmd: docker exec R0 ping -c2 10.0.0.2

